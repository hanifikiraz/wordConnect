We will remove the warning about: androidx.fragment:fragment:1.0.0 and update it to 1.5.7

This is only a warning and removing it will require an upgrade (not update) of the game engine completely.
You should make a back-up copy of your project before attempting it.
This upgrade also updates the android dependencies such as ads, IAP.

1. In top-level build.gradle file, change gdxVersion value to 1.12.0
2. In top-level build.gradle files, replace jcenter() with gradlePluginPortal() in two places, they are on 2 different lines.
3. In android-level build.gradle file, replace the code block that starts with "task copyAndroidNatives {" with the following:

task copyAndroidNatives {
    doFirst {
        file("libs/armeabi-v7a/").mkdirs()
        file("libs/arm64-v8a/").mkdirs()
        file("libs/x86_64/").mkdirs()
        file("libs/x86/").mkdirs()

        configurations.natives.copy().files.each { jar ->
            def outputDir = null
            if (jar.name.endsWith("natives-arm64-v8a.jar")) outputDir = file("libs/arm64-v8a")
            if (jar.name.endsWith("natives-armeabi-v7a.jar")) outputDir = file("libs/armeabi-v7a")
            if(jar.name.endsWith("natives-x86_64.jar")) outputDir = file("libs/x86_64")
            if(jar.name.endsWith("natives-x86.jar")) outputDir = file("libs/x86")
            if(outputDir != null) {
                copy {
                    from zipTree(jar)
                    into outputDir
                    include "*.so"
                }
            }
        }
    }
}

4. In top-level build.gradle file, replece the code block that starts with "project(":android") {" with the following:

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"

        implementation 'com.android.support:multidex:1.0.3'
        implementation 'org.jsoup:jsoup:1.13.1'
        implementation "com.google.android.gms:play-services-ads:22.4.0"
        implementation 'com.google.android.ump:user-messaging-platform:2.1.0'
        implementation 'com.android.billingclient:billing:6.0.1'
        implementation platform('com.google.firebase:firebase-bom:25.11.0')
        implementation 'com.google.firebase:firebase-messaging'
        
    }
}

5. Sync the project.

6. In Android Studio, hit the SHIFT key fast twice and in the opening dialog box, type mesh and double click on MeshShader.java when it appears.
This will open the file MeshShader.java for editing. In this file find the function draw that starts with "public void draw(Batch batch, float parentAlpha) {"
and replece it with the following:

public void draw(Batch batch, float parentAlpha) {
        super.draw(batch, parentAlpha);

        if(isVisible()) {
            batch.end();
            ShaderProgram sp = batch.getShader();
            renderMesh(getX(), getY(), getWidth(), getHeight());
            batch.begin();
            batch.setShader(sp);
        }
    }
	
7. Try to compile and run the app in your device and you will get some compilation errors. The errors occur in pool-specific files due to the new
game engine version. Open those files that report errors and remove the last boolean value from their constructors.

for example, change:

public CellModelPool(){
	super(9, 50, true);
}

to 

public CellModelPool(){
	super(9, 50);
}


8. Now the project should run fine.

9. After the upgrade, my project compiled fine but some android-specific files appeared with a lot of red colored error messages. The project works fine
with those red-color errors but something seems to be off. To solved this, I went to File->Invalidate caches, with "Clear CVS log ..." selected and hit
"Invalidate and Restart".

10. After a while, Android Studio processed the project and most of the error messages disappeared, except the annotations left from the fragment 1.0.0 library.
I found such annotations in AdActivity.java and they are completely unnecessary. Annotations start with @ with some word to the right, such as @NonNull and @Nullable. 
Just remove them.

for example, change:

protected void onCreate(@Nullable Bundle savedInstanceState) {

to 

protected void onCreate(Bundle savedInstanceState) {

You should remove those. 
And don't forget to delete the package-import lines by the top of the file.

11. Now the project should be fine to run fine but complete the next step.

---------------------------------------------------------------------------------------------------------------------------------

1. Bug fix. Open AdActivity.java replace 2 lines that start with "inEUCountry = consentInformation.getConsentStatus()..." (and the line below it) with the 
following single line:

inEUCountry = consentInformation.isConsentFormAvailable();

This should fix opening the GDPR dialog form from the settings dialog.	